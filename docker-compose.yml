version: '3'

services:
    backend:
        container_name: backend
        build:
            context: ./backend/
            target: watcher
            args:
                - SERVER_PORT=${SERVER_PORT}
                - UI_URL=${UI_URL}
                - DATABASE_URL=${DATABASE_URL}
        ports:
            - ${SERVER_PORT}:${SERVER_PORT}
            - 5005:5005
        volumes:
            - ./backend:/app
        networks:
            - shop

    frontend:
        container_name: frontend
        build:
            context: ./frontend/
            target: watcher
            args:
                - UI_URL=${UI_URL}
                - API_URL=${API_URL}
                - SOCKET_ADDRESS=${SOCKET_ADDRESS}
                - UPLOADTHING_SECRET=${UPLOADTHING_SECRET}
                - UPLOADTHING_APP_ID=${UPLOADTHING_APP_ID}
        ports:
            - ${FRONT_PORT}:${FRONT_PORT}
        volumes:
            - ./frontend:/app
        depends_on:
            - backend
        networks:
            - shop

    db:
        container_name: db
        image: postgres
        restart: always
        ports:
            - 5432:5432
        environment:
            POSTGRES_PASSWORD: example
        networks:
            - shop
    adminer:
        image: adminer
        restart: always
        ports:
            - 8080:8080
        networks:
            - shop

networks:
    shop:
